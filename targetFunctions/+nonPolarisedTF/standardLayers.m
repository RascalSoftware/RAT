function [backgroundParams,qzshifts,scalefactors,bulkIns,bulkOuts,...
    resolutionParams,chis,reflectivity,simulation,shiftedData,layerSlds,...
    sldProfiles,resampledLayers,subRoughs] = standardLayers(problemStruct,problemCells,controls)
    % This is the main reflectivity calculation of the standard layers
    % calculation type. It extracts the required parameters for the contrasts
    % from the input arrays, then passes the main calculation to
    % 'standardLayersCore', which carries out the calculation iteself. 
    % The core calculation is common for both standard and custom layers.
    
    % Extract individual cell arrays
    [repeatLayers,...
     data,...
     dataLimits,...
     simLimits,...
     contrastLayers,...
     layersDetails,~] = parseCells(problemCells);
    
    % Extract individual parameters from problemStruct
    [numberOfContrasts, geometry, contrastBackgroundIndices, contrastQzshiftIndices,...
     contrastScalefactorIndices, contrastBulkInIndices, contrastBulkOutIndices,...
     contrastResolutionParamIndices, ~, backgroundParamArray, qzshiftArray,...
     scalefactorArray, bulkInArray, bulkOutArray, resolutionParamArray, ~,...
     dataPresent, nParams, params, ~, resample, contrastBackgroundActions, ~,...
     useImaginary] = extractProblemParams(problemStruct);
    
    calcSld = controls.calcSldDuringFit;
    parallel = controls.parallel;
    resampleMinAngle = controls.resampleMinAngle;
    resampleNPoints = controls.resampleNPoints;
    
    % Allocate the memory for the output arrays before the main loop
    backgroundParams = zeros(numberOfContrasts,1);
    qzshifts = zeros(numberOfContrasts,1);
    scalefactors = zeros(numberOfContrasts,1);
    bulkIns = zeros(numberOfContrasts,1);
    bulkOuts = zeros(numberOfContrasts,1);
    resolutionParams = zeros(numberOfContrasts,1);
    subRoughs = zeros(numberOfContrasts,1);
    chis = zeros(numberOfContrasts,1);
    layerSlds = cell(numberOfContrasts,1);
    sldProfiles = cell(numberOfContrasts,1);
    shiftedData = cell(numberOfContrasts,1);
    
    reflectivity = cell(numberOfContrasts,1);
    for i = 1:numberOfContrasts
        reflectivity{i} = [1 1; 1 1];
    end
    
    simulation = cell(numberOfContrasts,1);
    for i = 1:numberOfContrasts
        simulation{i} = [1 1; 1 1];
    end
    
    resampledLayers = cell(numberOfContrasts,1);
    for i = 1:numberOfContrasts
        resampledLayers{i} = [1 1 1; 1 1 1];
    end
    % end memory allocation
    
    % First we need to allocate the absolute values of the input
    % parameters to all the layers in the layers list. This only needs
    % to be done once, and so is done outside the contrasts loop
    outParameterisedLayers = allocateParamsToLayers(params, layersDetails);   
    
    % Substrate roughness is always first parameter for standard layers
    for i = 1:numberOfContrasts
        subRoughs(i) = params(1);
    end
    
    if strcmpi(parallel, coderEnums.parallelOptions.Contrasts)
    
        % Loop over all the contrasts
        parfor i = 1:numberOfContrasts
    
            [backgroundParams(i),qzshifts(i),scalefactors(i),bulkIns(i),...
             bulkOuts(i),resolutionParams(i),chis(i),reflectivity{i},...
             simulation{i},shiftedData{i},layerSlds{i},sldProfiles{i},...
             resampledLayers{i}...
             ] = contrastCalculation(contrastBackgroundIndices(i),...
             contrastQzshiftIndices(i),contrastScalefactorIndices(i),...
             contrastBulkInIndices(i),contrastBulkOutIndices(i), ...
             contrastResolutionParamIndices(i),backgroundParamArray,qzshiftArray,...
             scalefactorArray,bulkInArray,bulkOutArray,resolutionParamArray,...
             dataPresent(i),data{i},dataLimits{i},simLimits{i},repeatLayers{i},...
             contrastBackgroundActions(i),nParams,parallel,resampleMinAngle,resampleNPoints,...
             useImaginary,resample(i),geometry,subRoughs(i),calcSld,...
             contrastLayers{i},outParameterisedLayers);
    
        end
        
    else
    
        % Loop over all the contrasts
        for i = 1:numberOfContrasts
            
            [backgroundParams(i),qzshifts(i),scalefactors(i),bulkIns(i),...
             bulkOuts(i),resolutionParams(i),chis(i),reflectivity{i},...
             simulation{i},shiftedData{i},layerSlds{i},sldProfiles{i},...
             resampledLayers{i}...
             ] = contrastCalculation(contrastBackgroundIndices(i),...
             contrastQzshiftIndices(i),contrastScalefactorIndices(i),...
             contrastBulkInIndices(i),contrastBulkOutIndices(i), ...
             contrastResolutionParamIndices(i),backgroundParamArray,qzshiftArray,...
             scalefactorArray,bulkInArray,bulkOutArray,resolutionParamArray,...
             dataPresent(i),data{i},dataLimits{i},simLimits{i},repeatLayers{i},...
             contrastBackgroundActions(i),nParams,parallel,resampleMinAngle,resampleNPoints,...
             useImaginary,resample(i),geometry,subRoughs(i),calcSld,...
             contrastLayers{i},outParameterisedLayers);

        end
    
    end

end


function [backgroundParamValue,qzshiftValue,...
            scalefactorValue,bulkInValue,...
            bulkOutValue,resolutionParamValue,...
            chi,reflectivity,...
            simulation,shiftedData,...
            layerSld,sldProfile,...
            resampledLayer] = contrastCalculation(backgroundParamIndex,...
                                          qzshiftIndex,scalefactorIndex,...
                                          bulkInIndex,bulkOutIndex,...
                                          resolutionParamIndex,backgroundParams,...
                                          qzshifts,scalefactors,bulkIns,bulkOuts,...
                                          resolutionParams,dataPresent,data,...
                                          dataLimits,simLimits,repeatLayers,...
                                          contrastBackgroundActions,nParams,...
                                          parallel,resampleMinAngle,resampleNPoints,...
                                          useImaginary,resample,geometry,roughness,...
                                          calcSld,contrastLayers,outParameterisedLayers)

    % Extract the relevant parameter values for this contrast
    % from the input arrays.
    % First need to decide which values of the backgrounds, scalefactors
    % data shifts and bulk contrasts are associated with this contrast
    [backgroundParamValue,...
     qzshiftValue,...
     scalefactorValue,...
     bulkInValue,bulkOutValue,...
     resolutionParamValue] = backSort(backgroundParamIndex,qzshiftIndex,...
                                      scalefactorIndex,bulkInIndex,...
                                      bulkOutIndex,resolutionParamIndex,...
                                      backgroundParams,qzshifts,scalefactors,...
                                      bulkIns,bulkOuts,resolutionParams);
    
    % Also need to determine which layers from the overall layers list
    % are required for this contrast, and put them in the correct order 
    % according to geometry
    thisContrastLayers = allocateLayersForContrast(contrastLayers,outParameterisedLayers,useImaginary);
    
    % Call the core layers calculation
    [sldProfile,reflectivity,...
     simulation,shiftedData,...
     layerSld,resampledLayer,...
     chi] = nonPolarisedTF.coreLayersCalculation(thisContrastLayers,roughness,...
                                                 geometry,bulkInValue,bulkOutValue,...
                                                 resample,calcSld,scalefactorValue,...
                                                 qzshiftValue,dataPresent,data,...
                                                 dataLimits,simLimits,repeatLayers,...
                                                 backgroundParamValue,resolutionParamValue,...
                                                 contrastBackgroundActions,nParams,...
                                                 parallel,resampleMinAngle,...
                                                 resampleNPoints,useImaginary);

end

function [qzshifts,scalefactors,bulkIns,bulkOuts,chis,reflectivity,...
    simulation,shiftedData,backgrounds,resolutions,layerSlds,sldProfiles,...
    resampledLayers,subRoughs] = customXY(problemStruct,controls)

    % Extract parameters from problemStruct
    [numberOfContrasts, ~, contrastBackgroundIndices, contrastQzshiftIndices,...
     contrastScalefactorIndices, contrastBulkInIndices, contrastBulkOutIndices,...
     contrastResolutionIndices, ~, backgroundParamValues, qzshiftValues,...
     scalefactorValues, bulkInValues, bulkOutValues, resolutionParamValues,...
     ~, dataPresent, nParams, paramValues, ~, ~, contrastBackgroundTypes,...
     contrastBackgroundActions, contrastResolutionTypes, contrastCustomFiles,...
     useImaginary, repeatLayers, data, dataLimits, simulationLimits, ~, ~,...
     customFiles, ~] = extractProblemParams(problemStruct);

    parallel = controls.parallel;
    resampleMinAngle = controls.resampleMinAngle;
    resampleNPoints = controls.resampleNPoints;
                
    %Pre-Allocation...
    qzshifts = zeros(numberOfContrasts,1);
    scalefactors = zeros(numberOfContrasts,1);
    bulkIns = zeros(numberOfContrasts,1);
    bulkOuts = zeros(numberOfContrasts,1);
    chis = zeros(numberOfContrasts,1);
   
    reflectivity = cell(numberOfContrasts,1);    
    simulation = cell(numberOfContrasts,1);
    shiftedData = cell(numberOfContrasts,1);
    backgrounds = cell(numberOfContrasts,1);
    resolutions = cell(numberOfContrasts,1);
    layerSlds = cell(numberOfContrasts,1);
    sldProfiles = cell(numberOfContrasts,1);
    resampledLayers = cell(numberOfContrasts,1);

    % Process the custom models
    numberOfOutputColumns = 3;
    [slds,subRoughs] = normalTF.processCustomFunction(contrastBulkInIndices,contrastBulkOutIndices,...
        bulkInValues,bulkOutValues,contrastCustomFiles,numberOfContrasts,numberOfOutputColumns,customFiles,paramValues,useImaginary);
    
    if strcmpi(parallel, coderEnums.parallelOptions.Contrasts)
    
        parfor i = 1:numberOfContrasts

            [qzshifts(i),scalefactors(i),bulkIns(i),bulkOuts(i),chis(i),...
             reflectivity{i},simulation{i},shiftedData{i},backgrounds{i},...
             resolutions{i},layerSlds{i},sldProfiles{i},resampledLayers{i}...
             ] = contrastCalculation(contrastBackgroundIndices{i},...
             contrastQzshiftIndices(i),contrastScalefactorIndices(i),...
             contrastBulkInIndices(i),contrastBulkOutIndices(i),...
             contrastResolutionIndices{i},backgroundParamValues,qzshiftValues,...
             scalefactorValues,bulkInValues,bulkOutValues,resolutionParamValues,...
             dataPresent(i),data{i},dataLimits{i},simulationLimits{i},repeatLayers{i},...
             contrastBackgroundTypes{i},contrastBackgroundActions{i},...
             contrastResolutionTypes{i},customFiles,nParams,parallel,...
             resampleMinAngle,resampleNPoints,subRoughs(i),slds{i});
        end
    
    else
    
        for i = 1:numberOfContrasts

            [qzshifts(i),scalefactors(i),bulkIns(i),bulkOuts(i),chis(i),...
             reflectivity{i},simulation{i},shiftedData{i},backgrounds{i},...
             resolutions{i},layerSlds{i},sldProfiles{i},resampledLayers{i}...
             ] = contrastCalculation(contrastBackgroundIndices{i},...
             contrastQzshiftIndices(i),contrastScalefactorIndices(i),...
             contrastBulkInIndices(i),contrastBulkOutIndices(i),...
             contrastResolutionIndices{i},backgroundParamValues,qzshiftValues,...
             scalefactorValues,bulkInValues,bulkOutValues,resolutionParamValues,...
             dataPresent(i),data{i},dataLimits{i},simulationLimits{i},repeatLayers{i},...
             contrastBackgroundTypes{i},contrastBackgroundActions{i},...
             contrastResolutionTypes{i},customFiles,nParams,parallel,...
             resampleMinAngle,resampleNPoints,subRoughs(i),slds{i});

        end
    
    end

    % Remove dummy imaginary column if present
    if ~useImaginary
        for i=1:numberOfContrasts
            sldProfiles{i}(:,3) = [];
            layerSlds{i}(:,3) = [];
            resampledLayers{i}(:,3) = [];
        end
    end

end


function [qzshift,scalefactor,bulkIn,bulkOut,chi,reflectivity,simulation,...
    shiftedData,background,resolution,layerSld,sldProfile,...
    resampledLayer] = contrastCalculation(backgroundParamIndex,...
    qzshiftIndex,scalefactorIndex,bulkInIndex,bulkOutIndex,resolutionParamIndex,...
    backgroundParams,qzshiftValues,scalefactorValues,bulkInValues,bulkOutValues,...
    resolutionParamValues,dataPresent,data,dataLimits,simulationLimits,...
    repeatLayers,backgroundType,backgroundAction,resolutionType,customFiles,...
    nParams,parallel,resampleMinAngle,resampleNPoints,roughness,sldProfile)

    % Extract the relevant parameter values for this contrast
    % from the input arrays.
    % First need to decide which values of the backgrounds, scalefactors
    % data shifts and bulk contrasts are associated with this contrast
    [qzshift,scalefactor,bulkIn,bulkOut] = backSort( ...
        qzshiftIndex,scalefactorIndex,bulkInIndex,bulkOutIndex, ...
        qzshiftValues,scalefactorValues,bulkInValues,bulkOutValues);
     
    % Resample the layers
    reSLD = sldProfile(:,[1,2]);
    imSLD = sldProfile(:,[1,3]);
    resampledLayer = resampleLayers(reSLD,imSLD,resampleMinAngle,resampleNPoints);
    
    layerSld = resampledLayer;

    % Apply scale factors and q shifts to the data
    shiftedData = shiftData(scalefactor,qzshift,dataPresent,data,dataLimits,simulationLimits);
    [simulationXData, dataIndices] = makeSimulationRange(shiftedData, simulationLimits);

    background = constructBackground(backgroundType,backgroundParamIndex,...
        shiftedData,customFiles,backgroundParams,simulationXData,dataIndices);
    resolution = constructResolution(resolutionType,resolutionParamIndex,...
        shiftedData,customFiles,resolutionParamValues,simulationXData,dataIndices);

    reflectivityType = 'standardAbeles';
    [reflectivity,simulation] = callReflectivity(bulkIn,bulkOut,simulationXData,dataIndices,repeatLayers,layerSld,roughness,resolution,parallel,reflectivityType);

    [reflectivity,simulation,shiftedData] = applyBackgroundCorrection(reflectivity,simulation,shiftedData,background,backgroundAction);
    
    chi = chiSquared(shiftedData,reflectivity,nParams);

end

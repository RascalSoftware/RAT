classdef testExamples < matlab.unittest.TestCase

    properties (TestParameter)
        exampleFile = {'orsoDSPCStandardLayers',...
            'DPPCCustomXYScript',...
            'testCppCustomLayers',...
            'DSPCMonolayerStandardLayers',...
            'DSPCMonolayerTwoContrasts',...
            'DSPCMonolayerCustomLayers'};
        exampleName = {'Orso lipid example',...
            'Custom DPPC',...
            'Orso lipid example - custom layers',...
            'DSPC monolayers',...
            'DSPC monolayers',...
            'DSPC custom layers'};
        exampleModel = {'standard layers',...
            'custom xy',...
            'custom layers',...
            'standard layers',...
            'standard layers',...
            'custom layers'}; 
        exampleContrastCount = {3,...
            3,...
            3,...
            4,...
            2,...
            2}; 
        exampleLayerCount = {5,...
            0,...
            0,...
            4,...
            4,...
            0};
        exampleGeometry = {'air/substrate',...
            'substrate/liquid',...
            'substrate/liquid',...
            'air/substrate',...
            'air/substrate',...
            'air/substrate'};
        exampleParameterParamCount = {15,...
            6,...
            8,...
            10,...
            10,...
            6};
        exampleBulkOutParamCount = {3,...
            3,...
            3,...
            2,...
            2,...
            2};
        exampleBackgroundsTypesCount = {3,...
            3,...
            3,...
            2,...
            2,...
            2};
        exampleDataCount = {4,...
            1,...
            4,...
            6,...
            3,...
            3};

    end

    methods (Test,ParameterCombination="sequential")
        % Runs the different examples sequentially 
        function testExample(testCase, ...
                             exampleFile, ...
                             exampleName, ...
                             exampleModel, ...
                             exampleContrastCount, ...
                             exampleLayerCount, ...
                             exampleGeometry, ...
                             exampleParameterParamCount, ...
                             exampleBulkOutParamCount, ...
                             exampleBackgroundsTypesCount, ...
                             exampleDataCount)

                % verifies example exists with .m extension
                testCase.verifyEqual(exist(exampleFile,'file'), 2);

                % runs the example file
                evalc(exampleFile); 

                % verifies the problem name, model type and geometry
                testCase.verifyEqual(problem.experimentName, exampleName);
                testCase.verifyEqual(problem.modelType, exampleModel);
                testCase.verifyEqual(problem.geometry, exampleGeometry);

                % verifies the count of problem properties
                testCase.verifyEqual(problem.contrasts.numberOfContrasts, exampleContrastCount);
                testCase.verifyEqual(problem.layers.layersCount, exampleLayerCount);
                testCase.verifyEqual(problem.parameters.paramCount, exampleParameterParamCount);
                testCase.verifyEqual(problem.bulkOut.paramCount, exampleBulkOutParamCount);
                testCase.verifyEqual(problem.background.backgrounds.typesCount, exampleBackgroundsTypesCount);
                testCase.verifyEqual(problem.data.dataCount, exampleDataCount);

                % Problem properties that are consistent across examples
                testCase.verifyEqual(problem.bulkIn.paramCount, 1);
                testCase.verifyEqual(problem.scalefactors.paramCount, 1); 
                testCase.verifyEqual(problem.qzshifts.paramCount, 1); 
                testCase.verifyEqual(problem.resolution.resolutions.typesCount, 1);

                % closes all the figures generated by the examples
                close all;
        end
    end
end




